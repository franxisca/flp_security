@startuml

package flp.security.management {

abstract class PDU {
int length
byte[length] value
}

class ReplyPDU {
ReplyPDUTag tag
__
ReplyPDU(ReplyPDUTag tag)
}

class CommandPDU {
CommandPDUTag tag
__
CommandPDU(CommandPDUTag tag)
}

enum ReplyPDUTag {

10000100 (key verification),
10000111 (key inventory),
10011111 (SA status request),
10010000 (read ARSN),
10110001 (ping),
10110011 (dump log),
10110100 (erase log)
}

enum CommandPDUTag {
00000001 (otar),
00000010 (key activation),
00000011 (key deactivation),
00000100 (key verification),
00000111 (key inventory),
00011011 (start SA),
00011110 (stop SA),
00010110 (rekey SA),
00011001 (expire SA),
00011010 (set ARSN),
00010101 (set ARSN window),
00011111 (SA status request),
00010000 (read ARSN),
00110001 (ping),
00110011 (dump log),
00110100 (erase log),
00110111 (alarm flag reset)
}

class SecurityManager {
+ KeyManager km
+ SAManager sam
+ Logger sLog
__
+ handle (PDU command)
- otar(byte[] value)
- keyActivation(byte[] value)
- keyDeactivation(byte[] value)
- keyVerification(byte[] value)
- keyInventory(byte[] value)
- startSA(byte[] value)
- stopSA(byte[] value)
- rekeySA(byte[] value)
- expireSA(byte[] value)
- setARSN(byte[] value)
- setARSNWindow(byte[] value)
- sAStausRequest(byte[] value)
- readARSN(byte[] value)
- ping()
- dumpLog()
- eraseLog()
- alarmFlagReset()
}

PDU <|-- ReplyPDU
PDU <|-- CommandPDU
ReplyPDU "1" *-- "1..*" ReplyPDUTag
CommandPDU "1" *-- "1..*" CommandPDUTag
}
@enduml
